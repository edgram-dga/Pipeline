  var tareaApi1 = Task.Run(async () =>
    {
        var resultadoApi1 = await ConsultarApiAsync("https://sapmii-mxqt.harman.com:51501/harman.com~mes~reportinterface~web/report/PCBA_Inventory_Done", xml1);
        InsertarConCopyEnStaging(resultadoApi1, conn, sfcExcluidos);
        Console.WriteLine("API 1 insertada en staging_data.");
    });

    var tareaApi2 = Task.Run(async () =>
    {
        var resultadoApi2 = await ConsultarApiAsync("https://sapmii-mxqt.harman.com:51501/harman.com~mes~reportinterface~web/report/PCBA_Inventory", xml2);
        InsertarConCopyEnStaging(resultadoApi2, conn, sfcExcluidos);
        Console.WriteLine("API 2 insertada en staging_data.");
    });

    await Task.WhenAll(tareaApi1, tareaApi2);

    // Mover todos los datos a data_monitor evitando duplicados
    MoverStagingADataMonitor(conn);
    Console.WriteLine("Datos movidos a data_monitor correctamente.");


private static async Task<JArray> ConsultarApiAsync(string url, string xmlBody)
{
    var options = new RestClientOptions(url)
    {
        Timeout = TimeSpan.FromMinutes(2)
    };
    var client = new RestClient(options);
    var request = new RestRequest("", Method.Post);
    request.AddHeader("Content-Type", "text/plain");
    request.AddParameter("text/plain", xmlBody, ParameterType.RequestBody);

    var response = await client.ExecuteAsync(request);
    if (!response.IsSuccessful)
        throw new Exception($"Error consultando API {url}: {response.StatusCode}");

    return JArray.Parse(response.Content);
}
