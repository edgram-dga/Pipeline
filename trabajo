    private static void InsertarLoteEnBloques(JArray data, NpgsqlConnection conn, HashSet<string> sfcExcluidos)
    {
        const int BatchSize = 500;
        var registrosFiltrados = new List<JToken>();
        foreach (var record in data)
        {
            string sfc = record["SFC"]?.ToString();
            if (!sfcExcluidos.Contains(sfc))
                registrosFiltrados.Add(record);
        }

        for (int i = 0; i < registrosFiltrados.Count; i += BatchSize)
        {
            int currentBatchSize = Math.Min(BatchSize, registrosFiltrados.Count - i);
            var sb = new StringBuilder();
            var parameters = new List<NpgsqlParameter>();

            sb.AppendLine("INSERT INTO intermedial_qt.public.staging_data (sfc, item, date_state, item_desc, item_type, item_rev, queue_operation) VALUES");

            for (int j = 0; j < currentBatchSize; j++)
            {
                var index = i + j;
                var record = registrosFiltrados[index];
                string suffix = j.ToString();

                sb.Append($"(@sfc{suffix}, @item{suffix}, @dateState{suffix}, @itemDesc{suffix}, @itemType{suffix}, @itemRev{suffix}, @queueOperation{suffix})");
                if (j < currentBatchSize - 1) sb.Append(",");
                sb.AppendLine();

                parameters.Add(new NpgsqlParameter($"sfc{suffix}", record["SFC"]?.ToString() ?? ""));
                parameters.Add(new NpgsqlParameter($"item{suffix}", record["ITEM"]?.ToString() ?? ""));
                parameters.Add(new NpgsqlParameter($"dateState{suffix}", record["DONE_DATE"]?.ToString() ?? ""));
                parameters.Add(new NpgsqlParameter($"itemDesc{suffix}", record["ITEM_DESC"]?.ToString() ?? ""));
                parameters.Add(new NpgsqlParameter($"itemType{suffix}", record["ITEM_TYPE"]?.ToString() ?? ""));
                parameters.Add(new NpgsqlParameter($"itemRev{suffix}", record["ITEM_REV"]?.ToString() ?? ""));
                parameters.Add(new NpgsqlParameter($"queueOperation{suffix}", record["DONE_OPERATION"]?.ToString() ?? ""));
            }

            sb.AppendLine("ON CONFLICT (sfc) DO UPDATE SET");
            sb.AppendLine("item = EXCLUDED.item,");
            sb.AppendLine("date_state = EXCLUDED.date_state,");
            sb.AppendLine("item_desc = EXCLUDED.item_desc,");
            sb.AppendLine("item_type = EXCLUDED.item_type,");
            sb.AppendLine("item_rev = EXCLUDED.item_rev,");
            sb.AppendLine("queue_operation = EXCLUDED.queue_operation,");

            using var cmd = new NpgsqlCommand(sb.ToString(), conn);
            cmd.Parameters.AddRange(parameters.ToArray());
            cmd.ExecuteNonQuery();
        }
    }
}
